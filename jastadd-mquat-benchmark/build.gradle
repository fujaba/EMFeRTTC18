
apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile project(':jastadd-mquat-base')
    compile project(':jastadd-mquat-solver')
    compile project(':jastadd-mquat-solver-ilp')
    compile project(':jastadd-mquat-solver-emfer')
    compile project(':jastadd-mquat-solver-simple')
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.8.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.10.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task benchmarkCustom(type: JavaExec, dependsOn: assemble) {
    group "application"
    classpath = sourceSets.test.runtimeClasspath
    main = 'de.tudresden.inf.st.mquat.benchmark.CustomBenchmarkMain'
    systemProperty "java.library.path", project.glpkPath
    jvmArgs("-XX:+UnlockCommercialFeatures", "-XX:+FlightRecorder", "-XX:StartFlightRecording=settings=profile", "-XX:FlightRecorderOptions=defaultrecording=true,dumponexit=true,dumponexitpath=results/fr", "-Xverify:none")
}

task benchmarkFull(type: JavaExec, dependsOn: assemble) {
    group "application"
    classpath = sourceSets.test.runtimeClasspath
    main = 'de.tudresden.inf.st.mquat.benchmark.FullBenchmarkMain'
    systemProperty "java.library.path", project.glpkPath
    // jvmArgs("-Xmx=2g")
    if (project.hasProperty("scenario")) {
        args(scenario.split(','))
    }
//    jvmArgs("-XX:+UnlockCommercialFeatures", "-XX:+FlightRecorder", "-XX:StartFlightRecording=settings=profile", "-XX:FlightRecorderOptions=defaultrecording=true,dumponexit=true,dumponexitpath=results/fr", "-Xverify:none")
}
